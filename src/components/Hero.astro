---
const site = {
  title: "Mi Landing con Nave üöÄ",
  description: "Una landing con campo de estrellas y una nave espacial animada.",
};
---

<style>
      :root {
        --hero-h: 70vh;
        --bg: #05060a;
        --text: #e8ebff;
        --accent: #7aa2ff;
      }

      * { box-sizing: border-box; }

      body {
        margin: 0;
        font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, "Helvetica Neue", Arial, "Noto Sans", "Liberation Sans", sans-serif;
        color: var(--text);
        background: #0a0b11;
      }

      /* ====== HERO CON ESTRELLAS ====== */
      .hero {
        position: relative;
        height: var(--hero-h);
        overflow: hidden;
        background: radial-gradient(1200px 600px at 70% 20%, #0f1530 0%, #0a0b11 70%);
        border-bottom: 1px solid rgba(255,255,255,0.06);
        margin-bottom: 3rem;
      }

      /* Canvas al fondo */
      #starfield {
        position: absolute;
        inset: 0;
        width: 100%;
        height: 100%;
        display: block;
        z-index: 1;
      }

      /* Ruta (solo depuraci√≥n) */
      .flight-path {
        position: absolute;
        inset: 0;
        pointer-events: none;
        opacity: 0; /* pon 1 si quieres verla */
        z-index: 4;
      }

      /* ====== NAVE PIXEL (tu PNG) ====== */
      .ship-pixel{
        position:absolute;
        top:0; left:0;
        image-rendering: pixelated;
        width: 96px;  /* (32px * 3) */
        height: 96px;
        offset-path: path("M 0,80 C 20,20 40,0 200,40 S 500,140 700,60 S 1000,30 1200,90");
        offset-rotate: auto 90deg;
        animation: ship-fly 12s linear infinite;
        filter: drop-shadow(0 0 6px rgba(150,200,255,.5));
        z-index: 3; /* por encima de planetas/sol */
        pointer-events: none;
      }
      @keyframes ship-fly{
        0%   { offset-distance: 0%;   transform: translateZ(0) }
        45%  { transform: translateZ(0) scale(1.02) }
        50%  { transform: translateZ(0) scale(1.06) }
        100% { offset-distance: 100%; transform: translateZ(0) }
      }

      /* ====== PLANETAS & SOL (im√°genes absolutas) ====== */
      .space-object{
        position: absolute;
        pointer-events: none;
        z-index: 2; /* sobre el canvas, bajo la nave */
        image-rendering: auto;
        will-change: transform, filter;
      }

      /* Animaciones base */
      @keyframes drift-small {            /* ida y vuelta, no se sale del frame */
        0%,100% { transform: translate(0, 0) rotate(0deg) }
        50%     { transform: translate(4vw, -1.2vh) rotate(1.6deg) }
      }
      @keyframes drift-medium {
        0%,100% { transform: translate(0, 0) rotate(0deg) }
        50%     { transform: translate(6vw, -2vh) rotate(2.2deg) }
      }
      @keyframes drift-large {
        0%,100% { transform: translate(0, 0) rotate(0deg) }
        50%     { transform: translate(8vw, -2.6vh) rotate(2.8deg) }
      }
@keyframes glow {
  0%,100% { filter: brightness(1.1) saturate(1.1) drop-shadow(0 0 12px rgba(255,255,255,0.2)); }
  50%     { filter: brightness(1.3) saturate(1.2) drop-shadow(0 0 18px rgba(255,255,255,0.35)); }
}


      /* Ubicaciones y ‚Äúvida‚Äù */
      .planet--1{
        top: 12%;
        left: 6%;
        width: clamp(90px, 12vw, 200px);
        height: auto;
        animation: drift-medium 26s ease-in-out infinite, glow 10s ease-in-out infinite;
        filter: drop-shadow(0 2px 8px rgba(0,0,0,.5));
      }

      .planet--2{
        top: 28%;
        right: 22%;
        width: clamp(120px, 14vw, 240px);
        height: auto;
        animation: drift-large 32s ease-in-out infinite, glow 12s ease-in-out infinite;
        filter: drop-shadow(0 2px 10px rgba(0,0,0,.55));
      }

      .planet--3{
        bottom: 9%;
        left: 34%;
        width: clamp(80px, 10vw, 160px);
        height: auto;
        animation: drift-small 22s ease-in-out infinite, glow 9s ease-in-out infinite;
        filter: drop-shadow(0 2px 8px rgba(0,0,0,.5));
      }

	.planet--4{
        top: 10%;
        right: 45%;
        width: clamp(40px, 3vw, 120px);
        height: auto;
        animation: drift-small 22s ease-in-out infinite, glow 9s ease-in-out infinite;
        filter: drop-shadow(0 2px 8px rgba(0,0,0,.5));
      }

      /* SOL radiante (arriba-der) */
      .sun{
        top: -4%;
        right: -1%;
        width: clamp(50px, 8vw, 220px);
        height: auto;
        /* brillo animado con m√∫ltiples halos */
        filter:
          drop-shadow(0 0 16px rgba(255,210,90,.55))
          drop-shadow(0 0 42px rgba(255,180,60,.35))
          drop-shadow(0 0 80px rgba(255,150,40,.22));
        animation:
          sun-pulse 3.6s ease-in-out infinite,
          drift-small 28s ease-in-out infinite;
      }
      @keyframes sun-pulse{
        0%,100%{
          transform: scale(1);
          filter:
            drop-shadow(0 0 14px rgba(255,210,90,.50))
            drop-shadow(0 0 36px rgba(255,180,60,.30))
            drop-shadow(0 0 70px rgba(255,150,40,.18));
        }
        50%{
          transform: scale(1.03);
          filter:
            drop-shadow(0 0 22px rgba(255,220,110,.65))
            drop-shadow(0 0 60px rgba(255,190,70,.42))
            drop-shadow(0 0 110px rgba(255,170,60,.28));
        }
      }

      /* ====== Alien saludando ====== */
.alien{
  position: absolute;
  bottom: -5px;
  left: -10px;
  width: clamp(44px, 1vw, 80px);
  height: auto;
  z-index: 3;
  transform-origin: bottom left;
  animation:
    wave 3s ease-in-out infinite,
    blink 6s ease-in-out infinite; /* üëà nueva animaci√≥n */
  image-rendering: pixelated;
  filter: drop-shadow(0 2px 8px rgba(0,0,0,.45));
}

@keyframes blink{
  0%, 25%   { opacity: 0; }
  30%, 80%  { opacity: 1; }
  100%      { opacity: 0; }
}
      @keyframes wave{
        0%   { transform: rotate(0deg) translateY(0) }
        6%   { transform: rotate(-12deg) translateY(-2px) }
        12%  { transform: rotate(10deg) translateY(-1px) }
        18%  { transform: rotate(-8deg) translateY(-1px) }
        24%  { transform: rotate(6deg) translateY(0) }
        30%  { transform: rotate(0deg) translateY(0) }  /* termina saludo */
        100% { transform: rotate(0deg) translateY(0) }  /* espera hasta 3s */
      }

      /* Secci√≥n de contenido */
      .content {
        max-width: 1100px;
        margin: 0 auto;
        padding: clamp(20px, 4vw, 40px);
      }

      .heroText {
        position: absolute;
        bottom: 18px;
        left: 50%;
        transform: translateX(-50%);
        text-align: center;
        width: min(92vw, 900px);
        backdrop-filter: blur(2px);
      }

      h1 { margin: 0 0 8px; font-size: clamp(28px, 5vw, 48px); letter-spacing: 0.3px; }
      p.lead { margin: 0 auto; opacity: 0.9; font-size: clamp(14px, 2.2vw, 18px); max-width: 780px; }

      .cta {
        margin-top: 18px;
        display: inline-block;
        padding: 12px 18px;
        border-radius: 14px;
        background: linear-gradient(90deg, #5f7cff, #9a7ff);
        color: white;
        font-weight: 600;
        text-decoration: none;
        transition: transform .15s ease;
      }
      .cta:hover { transform: translateY(-1px); }

      section {
        padding: clamp(36px, 8vw, 72px) 0;
        border-bottom: 1px solid rgba(255,255,255,0.06);
        background: linear-gradient(to bottom, rgba(255,255,255,0.02), transparent);
      }

      .grid {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: clamp(16px, 2.4vw, 24px);
      }
      @media (max-width: 900px) { .grid { grid-template-columns: 1fr; } }
      .card {
        background: rgba(255,255,255,0.03);
        border: 1px solid rgba(255,255,255,0.06);
        border-radius: 16px;
        padding: 20px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.25);
      }
      .card h3 { margin-top: 0; }
    </style>

    <header class="hero" aria-label="Secci√≥n con animaci√≥n espacial">
      <!-- Tu nave pixel -->
      <img class="ship-pixel" src="/ship.png" alt="Nave retro" width="32" height="32" />

      <!-- Planetas + Sol (im√°genes) -->
      <img class="space-object planet--1" src="/planeta1.png" alt="Planeta 1" width="256" height="256" />
      <img class="space-object planet--2" src="/planeta2.png" alt="Planeta 2" width="256" height="256" />
      <img class="space-object planet--3" src="/planeta3.png" alt="Planeta 3" width="256" height="256" />
      <img class="space-object planet--4" src="/planeta4.png" alt="Planeta 4" width="256" height="256" />
      <img class="space-object sun"       src="/sol.png"      alt="Sol"       width="256" height="256" />

      <!-- Alien saludando -->
      <img class="alien" src="/alien.png" alt="Alien saludando" width="128" height="128" />

      <!-- Fondo canvas -->
      <canvas id="starfield" aria-hidden="true"></canvas>

      <!-- Ruta (depuraci√≥n de la trayectoria) -->
      <svg class="flight-path" viewBox="0 0 1200 180" preserveAspectRatio="none">
        <path d="M 0,80 C 20,20 40,0 200,40 S 500,140 700,60 S 1000,30 1200,90"
              fill="none" stroke="rgba(122,162,255,0.35)" stroke-width="2" stroke-dasharray="6 8" />
      </svg>
    </header>

    <script type="module">
      const canvas = document.getElementById('starfield');
      const ctx = canvas.getContext('2d', { alpha: true });

      const DPR = Math.max(1, Math.min(2, window.devicePixelRatio || 1));
      let W, H;

      function resize() {
        const { width, height } = canvas.getBoundingClientRect();
        W = Math.max(1, Math.floor(width));
        H = Math.max(1, Math.floor(height));
        canvas.width = W * DPR;
        canvas.height = H * DPR;
        ctx.setTransform(DPR, 0, 0, DPR, 0, 0);
      }
      resize();
      addEventListener('resize', resize);

      // Capas de estrellas
      const LAYERS = [
        { count: 90,  speed: 0.08, size: [1, 2],  alpha: 0.6 },
        { count: 70,  speed: 0.18, size: [1, 2.5], alpha: 0.8 },
        { count: 40,  speed: 0.35, size: [1, 3],  alpha: 0.85 },
        { count: 25,  speed: 0.6,  size: [1, 3.6], alpha: 0.9 },
      ];

      function rng(seed) {
        let s = seed % 2147483647;
        if (s <= 0) s += 2147483646;
        return () => (s = s * 16807 % 2147483647) / 2147483647;
      }

      const stars = [];
      {
        const rand = rng(42);
        for (const layer of LAYERS) {
          for (let i = 0; i < layer.count; i++) {
            stars.push({
              x: rand() * W,
              y: rand() * H,
              r: layer.size[0] + rand() * (layer.size[1] - layer.size[0]),
              a: layer.alpha * (0.7 + rand() * 0.6),
              speed: layer.speed * (0.85 + rand() * 0.3),
              tw: rand() * Math.PI * 2,
              tws: 0.8 + rand() * 1.2,
            });
          }
        }
      }

      let last = performance.now();
      function tick(now) {
        const dt = Math.min(64, now - last);
        last = now;

        ctx.clearRect(0, 0, W, H);

        // Gradiente espacial suave
        const g = ctx.createRadialGradient(W * 0.7, H * 0.2, 10, W * 0.7, H * 0.2, Math.max(W, H));
        g.addColorStop(0, 'rgba(25,35,75,0.25)');
        g.addColorStop(1, 'rgba(5,6,10,0)');
        ctx.fillStyle = g;
        ctx.fillRect(0, 0, W, H);

        // Estrellas
        for (const s of stars) {
          s.x += s.speed * dt * 0.06; // derecha
          if (s.x - s.r > W) s.x = -s.r; // reingresa por la izquierda

          s.tw += (dt / 1000) * s.tws;
          const twinkle = 0.75 + 0.25 * Math.sin(s.tw);

          ctx.globalAlpha = s.a * twinkle;
          ctx.beginPath();
          ctx.arc(s.x, s.y, s.r, 0, Math.PI * 2);
          ctx.fillStyle = '#cfe1ff';
          ctx.fill();

          // rastro ocasional
          if (s.speed > 0.5 && Math.random() < 0.015) {
            ctx.globalAlpha = 0.25 * twinkle;
            ctx.beginPath();
            ctx.moveTo(s.x - 10, s.y);
            ctx.lineTo(s.x + 18, s.y);
            ctx.lineWidth = 1.2;
            ctx.strokeStyle = '#9fb8ff';
            ctx.stroke();
          }
        }

        ctx.globalAlpha = 1;
        requestAnimationFrame(tick);
      }
      requestAnimationFrame(tick);
    </script>